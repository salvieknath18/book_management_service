
openapi: 3.0.0
info:
  description: 'This is API documentation for book management service'
  version: '1.0.0'
  title: 'Book Management Portal'
  contact:
    email: 'salvieknath18@gmail.com'
host: 'localhost:5000/api/'
basePath: 'api/'
tags:
  - name: 'auth'
    description: 'Authentication Login/Register'
  - name: 'books'
    description: 'books management'
  - name: 'users'
    description: 'Operations about the users'
  - name: 'borrow'
    description: 'Borrow/return Services'
  - name: 'analytics'
    description: 'Analytics Services'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
schemes:
  - 'http'
paths:
  /api/auth/login:
    post:
      tags:
        - 'auth'
      summary: 'Login API'
      produces:
        - 'application/json'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
  /api/auth/register:
    post:
      tags:
        - 'auth'
      summary: 'Register API'
      produces:
        - 'application/json'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - isbn
              properties:
                artist_name:
                  type: string
                artist_genre:
                  type: string
                albums_recorded:
                  type: integer
                username:
                  type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
  /api/books:
    get:
      tags:
        - 'books'
      summary: 'Get all Books'
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
    post:
      tags:
        - 'books'
      summary: 'Add Book in DB'
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
  /api/book/<id>:
    get:
      tags:
        - 'books'
      summary: 'Get single book'
      produces:
        - 'application/json'
      parameters:
        - id: limit
          in: query
          description: book object id
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
    delete:
      tags:
        - 'books'
      summary: 'Delete single book'
      produces:
        - 'application/json'
      parameters:
        - id: limit
          in: query
          description: book object id
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
    put:
      tags:
        - 'books'
      summary: 'Add Book in DB'
      produces:
        - 'application/json'
      parameters:
        - id: limit
          in: query
          description: book object id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - isbn
              properties:
                artist_name:
                  type: string
                artist_genre:
                  type: string
                albums_recorded:
                  type: integer
                username:
                  type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
  /api/users:
    get:
      tags:
        - 'users'
      summary: 'Get all Users'
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
    post:
      tags:
        - 'users'
      summary: 'Add User in DB'
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
  /api/user/<id>:
    get:
      tags:
        - 'users'
      summary: 'Get single user'
      produces:
        - 'application/json'
      parameters:
        - id: limit
          in: query
          description: user object id
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
    delete:
      tags:
        - 'users'
      summary: 'Delete single user'
      produces:
        - 'application/json'
      parameters:
        - id: limit
          in: query
          description: user object id
          schema:
            type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
    put:
      tags:
        - 'users'
      summary: 'Add User in DB'
      produces:
        - 'application/json'
      parameters:
        - id: limit
          in: query
          description: user object id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - isbn
              properties:
                artist_name:
                  type: string
                artist_genre:
                  type: string
                albums_recorded:
                  type: integer
                username:
                  type: string
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
  /api/borrowBook:
    post:
      tags:
        - 'borrow'
      summary: 'Add User in DB'
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
  /api/returnBook:
    post:
      tags:
        - 'borrow'
      summary: 'Add User in DB'
      produces:
        - 'application/json'
      responses:
        '200':
          description: 'successful operation'
          schema:
            $ref: '#/definitions/LoginResponse'
  /api/analytics/borrowedBooks/<id>:
    get:
      tags:
        - 'analytics'
      summary: 'Get single user'
      produces:
        - 'application/json'
      parameters:
        - id: limit
          in: query
          description: user object id
          schema:
            type: string
  /api/analytics/booksByGenre:
    get:
      tags:
        - 'analytics'
      summary: 'Get single user'
      produces:
        - 'application/json'
      parameters:
        - id: limit
          in: query
          description: user object id
          schema:
            type: string
definitions:
  LoginRequest:
    type: 'object'
    properties:
      username:
        type: 'string'
      password:
        type: 'string'
  LoginResponse:
    type: 'object'
    properties:
      id:
        type: 'id'
      name:
        type: 'string'
      email:
        type: 'string'
      role:
        type: 'string'
      token:
        type: 'string'
